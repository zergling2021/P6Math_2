# Generated by Django 4.0.4 on 2022-05-13 08:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('science', '0027_auto_20210810_0806'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerRecords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(default='0', max_length=50)),
                ('question_model_index', models.CharField(default='000', max_length=200)),
                ('question_model', models.CharField(default='NA', max_length=2000)),
                ('question_text', models.CharField(default='*', max_length=2000)),
                ('record_date', models.DateTimeField(verbose_name='date published')),
                ('correct_answer_a', models.CharField(default='0', max_length=20)),
                ('attempted_answer_a', models.CharField(default='0', max_length=500)),
                ('correct_answer_b', models.CharField(default='0', max_length=500)),
                ('attempted_answer_b', models.CharField(default='0', max_length=500)),
                ('correct_answer_c', models.CharField(default='0', max_length=500)),
                ('attempted_answer_c', models.CharField(default='0', max_length=500)),
                ('result_text', models.CharField(default='', max_length=2000)),
                ('topic_number', models.CharField(default='1', max_length=20)),
                ('subtopic_number', models.CharField(default='1', max_length=50)),
                ('lv3_topic_number', models.CharField(default='0', max_length=50)),
                ('number_of_attempts', models.IntegerField(default=0)),
                ('number_of_successful_attempts', models.IntegerField(default=0)),
                ('success_on_first_attempt', models.CharField(default='No', max_length=10)),
                ('self_rated_score', models.IntegerField(default=-1)),
                ('question_type', models.CharField(default='MCQ', max_length=200)),
                ('question_subject', models.CharField(default='Science', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishLevel3Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_index', models.CharField(default='0', max_length=10)),
                ('topic_name', models.CharField(default='0', max_length=500)),
                ('number_of_questions', models.IntegerField(default=0)),
                ('number_of_attempted_questions', models.IntegerField(default=0)),
                ('number_of_success_first_attempt', models.IntegerField(default=0)),
                ('number_of_latest_success_attempt', models.IntegerField(default=0)),
                ('number_of_attempted_open_questions', models.IntegerField(default=0)),
                ('avg_first_self_rated_score', models.FloatField(default=0.0)),
                ('avg_latest_self_rated_score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_model_index', models.CharField(default='000', max_length=200)),
                ('question_model', models.CharField(default='NA', max_length=2000)),
                ('question_text', models.CharField(default='*', max_length=2000)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('correct_answer_a', models.CharField(default='0', max_length=20)),
                ('attempted_answer_a', models.CharField(default='0', max_length=500)),
                ('correct_answer_b', models.CharField(default='0', max_length=500)),
                ('attempted_answer_b', models.CharField(default='0', max_length=500)),
                ('correct_answer_c', models.CharField(default='0', max_length=500)),
                ('attempted_answer_c', models.CharField(default='0', max_length=500)),
                ('attempted_answer_d', models.CharField(default='0', max_length=500)),
                ('result_text', models.CharField(default='', max_length=2000)),
                ('topic_number', models.CharField(default='1', max_length=20)),
                ('subtopic_number', models.CharField(default='1', max_length=50)),
                ('lv3_topic_number', models.CharField(default='0', max_length=50)),
                ('number_of_attempts', models.IntegerField(default=0)),
                ('number_of_successful_attempts', models.IntegerField(default=0)),
                ('image_name', models.CharField(default='000_01.png', max_length=200)),
                ('image2_name', models.CharField(default='000_02.png', max_length=200)),
                ('question_additional_text_line_1', models.CharField(default='*', max_length=500)),
                ('question_additional_text_line_2', models.CharField(default='*', max_length=500)),
                ('question_additional_text_line_3', models.CharField(default='*', max_length=500)),
                ('question_additional_text_line_4', models.CharField(default='*', max_length=500)),
                ('question_source', models.CharField(default='', max_length=100)),
                ('success_on_first_attempt', models.CharField(default='No', max_length=10)),
                ('last_attempt_date', models.CharField(default='0', max_length=50)),
                ('last_attempt_success', models.CharField(default='No', max_length=50)),
                ('first_self_rated_score', models.IntegerField(default=-1)),
                ('latest_self_rated_score', models.IntegerField(default=-1)),
                ('answer_image_name', models.CharField(default='default_pic.png', max_length=200)),
                ('question_type', models.CharField(default='MCQ', max_length=200)),
                ('question_subject', models.CharField(default='Science', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishSubTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_index', models.CharField(default='0', max_length=10)),
                ('topic_name', models.CharField(default='0', max_length=500)),
                ('number_of_questions', models.IntegerField(default=0)),
                ('number_of_attempted_questions', models.IntegerField(default=0)),
                ('number_of_success_first_attempt', models.IntegerField(default=0)),
                ('number_of_latest_success_attempt', models.IntegerField(default=0)),
                ('number_of_attempted_open_questions', models.IntegerField(default=0)),
                ('avg_first_self_rated_score', models.FloatField(default=0.0)),
                ('avg_latest_self_rated_score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_index', models.CharField(default='0', max_length=10)),
                ('topic_name', models.CharField(default='0', max_length=500)),
                ('number_of_questions', models.IntegerField(default=0)),
                ('number_of_attempted_questions', models.IntegerField(default=0)),
                ('number_of_success_first_attempt', models.IntegerField(default=0)),
                ('number_of_latest_success_attempt', models.IntegerField(default=0)),
                ('number_of_attempted_open_questions', models.IntegerField(default=0)),
                ('avg_first_self_rated_score', models.FloatField(default=0.0)),
                ('avg_latest_self_rated_score', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(default='0', max_length=50)),
                ('user_name', models.CharField(default='0', max_length=200)),
                ('user_school', models.CharField(default='0', max_length=200)),
                ('user_grade', models.CharField(default='0', max_length=200)),
                ('user_mailing_address', models.CharField(default='0', max_length=200)),
                ('user_contact_no', models.CharField(default='0', max_length=30)),
                ('user_email_address', models.CharField(default='0', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EnglishChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
                ('answer', models.CharField(default='', max_length=10)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='science.sciencequestion')),
            ],
        ),
    ]
